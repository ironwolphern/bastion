name: Docker Images Validation

on:
  push:
    paths:
      - 'distribution/*/Dockerfile'
      - '.github/workflows/docker-validate.yml'
  pull_request:
    paths:
      - 'distribution/*/Dockerfile'
      - '.github/workflows/docker-validate.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: distribution/*/Dockerfile

      - name: Set matrix
        id: set-matrix
        run: |
          DIRS=$(echo '${{ steps.changed-files.outputs.all_changed_files }}' | \
                  xargs -I {} dirname {} | \
                  sort -u | \
                  jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=${DIRS}" >> $GITHUB_OUTPUT

  validate:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.matrix != '[]' && needs.detect-changes.outputs.matrix != '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get distribution name
        id: distribution
        run: echo "name=$(basename ${{ matrix.distribution }})" >> $GITHUB_OUTPUT

      - name: Install Hadolint
        run: |
          wget -q https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
          sudo mv hadolint-Linux-x86_64 /usr/local/bin/hadolint
          sudo chmod +x /usr/local/bin/hadolint

      - name: Run Hadolint
        run: hadolint ${{ matrix.distribution }}/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image for analysis
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.distribution }}
          file: ${{ matrix.distribution }}/Dockerfile
          push: false
          load: true
          tags: ${{ steps.distribution.outputs.name }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Dive analysis
        uses: yuichielectric/dive-action@v0.0.4
        with:
          image: ${{ steps.distribution.outputs.name }}:test
          config: .dive-ci.yml
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Dockle security check
        uses: goodwithtech/dockle-action@main
        with:
          image: ${{ steps.distribution.outputs.name }}:test
          format: 'list'
          exit-code: '1'
          exit-level: 'warn'

  summary:
    needs: validate
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check validation status
        run: |
          if [ "${{ needs.validate.result }}" = "success" ]; then
            echo "✅ All distribution validations passed successfully"
            exit 0
          else
            echo "❌ Some distribution validations failed"
            exit 1
          fi
