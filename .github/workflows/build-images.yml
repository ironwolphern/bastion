name: Build and Push Docker Images

on:
  push:
    tags: [ 'v*.*.*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # Versions tools
  TERRAFORM_VERSION: 1.0.0
  OC_VERSION: 4.8.0

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      distributions: ${{ steps.set-distro.outputs.distributions }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set distributions
        id: set-distro
        run: |
          echo "distributions=$(find . -name "Dockerfile" | jq -R -s -c 'split("\n")[:-1]' | \
          sed 's|./distribution/\([^/]*\)/Dockerfile|distribution/\1|g')" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    strategy:
      matrix:
        distro: ${{ fromJson(needs.prepare.outputs.distributions) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set arguments for the build
        id: set-args
        run: |
          echo "IMAGE_NAME=${{ github.repository }}-$(basename ${{ matrix.distro }})" >> $GITHUB_ENV
          echo "TERRAFORM_VERSION=$(cat .env | grep TERRAFORM_VERSION | cut -d'=' -f2)" >> $GITHUB_ENV
          echo "OC_VERSION=$(cat .env | grep OC_VERSION | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.name=${{ env.IMAGE_NAME }}
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.authors=${{ github.actor }}
            org.opencontainers.image.url="https://github.com/${{ github.repository }}"
            org.opencontainers.image.documentation="https://github.com/${{ github.repository }}"
            org.opencontainers.image.source="https://github.com/${{ github.repository }}"
            org.opencontainers.image.description="DevOps Tools Container"
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.version=${{ github.ref_name}}
            org.opencontainers.image.created=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.vendor=${{ github.actor }}
            org.opencontainers.image.ref.name=${{ github.ref }}
          tags: |
            type=ref,event=branch
            type=semver,pattern=latest
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=long

      - name: Build image for analysis
        uses: docker/build-push-action@v6.13.0
        with:
          context: ${{ github.workspace }}
          file: ${{ matrix.distro }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TERRAFORM_VERSION=${{ env.TERRAFORM_VERSION }}
            OC_VERSION=${{ env.OC_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
